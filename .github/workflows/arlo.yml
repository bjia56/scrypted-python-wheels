name: Build @scrypted/arlo dependencies

on:
  push:
    branches:
      - main
    tags:
  pull_request:

jobs:
  stage1:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Prepare BuildKit access
        env:
          CERT_BASE64: ${{ secrets.BUILDKIT_CERT_BASE64 }}
          CA_BASE64: ${{ secrets.BUILDKIT_CA_BASE64 }}
          KEY_BASE64: ${{ secrets.BUILDKIT_KEY_BASE64 }}
        run: |
          echo $CERT_BASE64 | base64 --decode > /tmp/.buildkit/cert.pem
          echo $CA_BASE64 | base64 --decode > /tmp/.buildkit/ca.pem
          echo $KEY_BASE64 | base64 --decode > /tmp/.buildkit/key.pem

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: remote
          driver-opts: |
            key=/tmp/.buildkit/cert.pem
            cacert=/tmp/.buildkit/ca.pem
            cert=/tmp/.buildkit/key.pem
          endpoint: tcp://${{ secrets.BUILDKIT_SERVER }}

      - name: Build Docker image (stage 1)
        uses: docker/build-push-action@v3
        with:
          context: ./arlo
          file: ./arlo/Dockerfile.stage1
          push: false
          platforms: linux/armhf
          tags: stage1:latest
          outputs: type=docker,dest=/tmp/stage1.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: stage1
          path: /tmp/stage1.tar

  stage2:
    needs: stage1
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Prepare BuildKit access
        env:
          CERT_BASE64: ${{ secrets.BUILDKIT_CERT_BASE64 }}
          CA_BASE64: ${{ secrets.BUILDKIT_CA_BASE64 }}
          KEY_BASE64: ${{ secrets.BUILDKIT_KEY_BASE64 }}
        run: |
          echo $CERT_BASE64 | base64 --decode > /tmp/.buildkit/cert.pem
          echo $CA_BASE64 | base64 --decode > /tmp/.buildkit/ca.pem
          echo $KEY_BASE64 | base64 --decode > /tmp/.buildkit/key.pem

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: remote
          driver-opts: |
            key=/tmp/.buildkit/cert.pem
            cacert=/tmp/.buildkit/ca.pem
            cert=/tmp/.buildkit/key.pem
          endpoint: tcp://${{ secrets.BUILDKIT_SERVER }}

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: stage1
          path: /tmp

      - name: Load image
        run: |
          docker system prune -af
          docker load --input /tmp/stage1.tar
          rm /tmp/stage1.tar
          docker image ls -a

      - name: Push image to registry
        run: |
          docker image tag stage1:latest ${{ secrets.STAGING_REGISTRY }}/stage1:latest
          docker image push ${{ secrets.STAGING_REGISTRY }}/stage1:latest

      - name: Build Docker image (stage 2)
        uses: docker/build-push-action@v3
        with:
          context: ./arlo
          file: ./arlo/Dockerfile.stage2
          build-contexts: stage1=docker-image://${{ secrets.STAGING_REGISTRY }}/stage1:latest
          push: false
          platforms: linux/armhf
          tags: stage2:latest
          outputs: type=docker,dest=/tmp/stage2.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: stage2
          path: /tmp/stage2.tar

